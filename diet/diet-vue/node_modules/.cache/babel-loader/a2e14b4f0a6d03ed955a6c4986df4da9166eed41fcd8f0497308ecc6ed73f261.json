{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\nvar _hoisted_1 = {\n  \"class\": \"food-record-query\"\n};\nvar _hoisted_2 = {\n  key: 0,\n  \"class\": \"query-container\"\n};\nvar _hoisted_3 = {\n  \"class\": \"date-picker\"\n};\nvar _hoisted_4 = [\"max\"];\nvar _hoisted_5 = {\n  key: 0,\n  \"class\": \"weekly-chart\"\n};\nvar _hoisted_6 = {\n  key: 1,\n  \"class\": \"loading\"\n};\nvar _hoisted_7 = {\n  key: 2,\n  \"class\": \"error\"\n};\nvar _hoisted_8 = {\n  key: 3,\n  \"class\": \"record-summary\"\n};\nvar _hoisted_9 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_10 = {\n  \"class\": \"calories\"\n};\nvar _hoisted_11 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_12 = {\n  \"class\": \"calories\"\n};\nvar _hoisted_13 = {\n  \"class\": \"summary-card\"\n};\nvar _hoisted_14 = {\n  key: 4,\n  \"class\": \"no-data\"\n};\nvar _hoisted_15 = {\n  key: 1,\n  \"class\": \"login-required\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_ctx.isLoggedIn ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    \"for\": \"date\"\n  }, \"選擇日期：\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = function ($event) {\n      return $data.selectedDate = $event;\n    }),\n    max: $options.today,\n    onChange: _cache[1] || (_cache[1] = function () {\n      return $options.fetchFoodRecord && $options.fetchFoodRecord.apply($options, arguments);\n    })\n  }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_4), [[_vModelText, $data.selectedDate]])]), _createCommentVNode(\" 一週熱量攝取折線圖 \"), $data.weeklyCalories.length ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _cache[3] || (_cache[3] = [_createElementVNode(\"canvas\", {\n    id: \"weeklyCaloriesChart\"\n  }, null, -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true), $data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" 載入中... \")) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, _toDisplayString($data.error), 1 /* TEXT */)) : $data.foodRecord ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_cache[4] || (_cache[4] = _createElementVNode(\"h3\", null, \"總攝取熱量\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_10, _toDisplayString($data.foodRecord.totalCalories) + \" 卡路里\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_11, [_cache[5] || (_cache[5] = _createElementVNode(\"h3\", null, \"目標熱量\", -1 /* HOISTED */)), _createElementVNode(\"p\", _hoisted_12, _toDisplayString($data.foodRecord.goalCalories) + \" 卡路里\", 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_13, [_cache[6] || (_cache[6] = _createElementVNode(\"h3\", null, \"剩餘熱量\", -1 /* HOISTED */)), _createElementVNode(\"p\", {\n    \"class\": _normalizeClass([\"calories\", {\n      'warning': $data.foodRecord.remainingCalories < 0\n    }])\n  }, _toDisplayString($data.foodRecord.remainingCalories) + \" 卡路里 \", 3 /* TEXT, CLASS */)])])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_14, \" 沒有找到該日期的記錄 \"))])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_cache[8] || (_cache[8] = _createElementVNode(\"p\", null, \"請先登入以使用此功能\", -1 /* HOISTED */)), _createVNode(_component_router_link, {\n    to: \"/login\",\n    \"class\": \"login-link\"\n  }, {\n    \"default\": _withCtx(function () {\n      return _cache[7] || (_cache[7] = [_createTextVNode(\"前往登入\")]);\n    }),\n    _: 1 /* STABLE */,\n    __: [7]\n  })]))]);\n}","map":{"version":3,"names":["_createElementBlock","_hoisted_1","_ctx","isLoggedIn","_hoisted_2","_createElementVNode","_hoisted_3","type","id","$data","selectedDate","$event","max","$options","today","onChange","_cache","fetchFoodRecord","apply","arguments","_createCommentVNode","weeklyCalories","length","_hoisted_5","loading","_hoisted_6","error","_hoisted_7","_toDisplayString","foodRecord","_hoisted_8","_hoisted_9","_hoisted_10","totalCalories","_hoisted_11","_hoisted_12","goalCalories","_hoisted_13","_normalizeClass","remainingCalories","_hoisted_14","_hoisted_15","_createVNode","_component_router_link","to"],"sources":["C:\\myapp\\diet\\diet-vue\\src\\views\\FoodRecordQuery.vue"],"sourcesContent":["<template>\r\n  <div class=\"food-record-query\">\r\n    <div v-if=\"isLoggedIn\" class=\"query-container\">\r\n      <div class=\"date-picker\">\r\n        <label for=\"date\">選擇日期：</label>\r\n        <input \r\n          type=\"date\" \r\n          id=\"date\" \r\n          v-model=\"selectedDate\"\r\n          :max=\"today\"\r\n          @change=\"fetchFoodRecord\"\r\n        >\r\n      </div>\r\n\r\n      <!-- 一週熱量攝取折線圖 -->\r\n      <div v-if=\"weeklyCalories.length\" class=\"weekly-chart\">\r\n        <canvas id=\"weeklyCaloriesChart\"></canvas>\r\n      </div>\r\n\r\n      <div v-if=\"loading\" class=\"loading\">\r\n        載入中...\r\n      </div>\r\n\r\n      <div v-else-if=\"error\" class=\"error\">\r\n        {{ error }}\r\n      </div>\r\n\r\n      <div v-else-if=\"foodRecord\" class=\"record-summary\">\r\n        <div class=\"summary-card\">\r\n          <h3>總攝取熱量</h3>\r\n          <p class=\"calories\">{{ foodRecord.totalCalories }} 卡路里</p>\r\n        </div>\r\n        <div class=\"summary-card\">\r\n          <h3>目標熱量</h3>\r\n          <p class=\"calories\">{{ foodRecord.goalCalories }} 卡路里</p>\r\n        </div>\r\n        <div class=\"summary-card\">\r\n          <h3>剩餘熱量</h3>\r\n          <p class=\"calories\" :class=\"{ 'warning': foodRecord.remainingCalories < 0 }\">\r\n            {{ foodRecord.remainingCalories }} 卡路里\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-else class=\"no-data\">\r\n        沒有找到該日期的記錄\r\n      </div>\r\n    </div>\r\n    <div v-else class=\"login-required\">\r\n      <p>請先登入以使用此功能</p>\r\n      <router-link to=\"/login\" class=\"login-link\">前往登入</router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\nimport { mapState } from 'vuex'\r\nimport Chart from 'chart.js/auto'\r\nimport { nextTick } from 'vue'\r\n\r\nexport default {\r\n  name: 'FoodRecordQueryView',\r\n  data() {\r\n    return {\r\n      selectedDate: new Date().toISOString().split('T')[0],\r\n      foodRecord: null,\r\n      loading: false,\r\n      error: null,\r\n      weeklyCalories: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      isLoggedIn: state => !!state.token,\r\n      userId: state => state.user?.id\r\n    }),\r\n    today() {\r\n      return new Date().toISOString().split('T')[0]\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchFoodRecord() {\r\n      if (!this.isLoggedIn) return\r\n\r\n      this.loading = true\r\n      this.error = null\r\n      this.foodRecord = null\r\n\r\n      try {\r\n        const response = await axios.get(\r\n          `http://localhost:8081/api/food-record/${this.userId}/date/${this.selectedDate}`,\r\n          {\r\n            headers: {\r\n              'Authorization': `Bearer ${this.$store.state.token}`\r\n            }\r\n          }\r\n        )\r\n        this.foodRecord = response.data\r\n        await this.fetchWeeklyCalories(this.selectedDate)\r\n      } catch (error) {\r\n        console.error('查詢失敗：', error)\r\n        this.error = '查詢失敗，請稍後再試'\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    },\r\n    async fetchWeeklyCalories(date) {\r\n      try {\r\n        let url = 'http://localhost:8081/api/foods/weekly-calories';\r\n        if (date) {\r\n          url += `?date=${date}`;\r\n        }\r\n        const response = await axios.get(url, {\r\n          headers: {\r\n            'Authorization': `Bearer ${this.$store.state.token}`\r\n          }\r\n        })\r\n        this.weeklyCalories = response.data\r\n        await nextTick()\r\n        this.renderWeeklyChart()\r\n      } catch (error) {\r\n        this.weeklyCalories = []\r\n      }\r\n    },\r\n    renderWeeklyChart() {\r\n      if (!this.weeklyCalories.length) return\r\n      if (this._weeklyChart) {\r\n        this._weeklyChart.destroy()\r\n      }\r\n      const ctx = document.getElementById('weeklyCaloriesChart').getContext('2d')\r\n      this._weeklyChart = new Chart(ctx, {\r\n        type: 'bar',\r\n        data: {\r\n          labels: this.weeklyCalories.map(item => item.date.slice(5)),\r\n          datasets: [{\r\n            label: '每日總攝取熱量',\r\n            data: this.weeklyCalories.map(item => item.totalCalories),\r\n            backgroundColor: '#42b983',\r\n            borderRadius: 8,\r\n            maxBarThickness: 40\r\n          }]\r\n        },\r\n        options: {\r\n          responsive: true,\r\n          plugins: {\r\n            legend: {\r\n              display: false\r\n            },\r\n            tooltip: {\r\n              callbacks: {\r\n                label: ctx => `${ctx.parsed.y} 卡路里`\r\n              }\r\n            }\r\n          },\r\n          scales: {\r\n            y: {\r\n              beginAtZero: true,\r\n              title: {\r\n                display: true,\r\n                text: '卡路里'\r\n              }\r\n            },\r\n            x: {\r\n              title: {\r\n                display: true,\r\n                text: '日期'\r\n              }\r\n            }\r\n          }\r\n        }\r\n      })\r\n    }\r\n  },\r\n  created() {\r\n    if (this.isLoggedIn) {\r\n      this.fetchFoodRecord()\r\n    }\r\n  },\r\n  watch: {\r\n    isLoggedIn(val) {\r\n      if (val) {\r\n        this.fetchFoodRecord()\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.food-record-query {\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n}\r\n\r\n.query-container {\r\n  margin-top: 20px;\r\n}\r\n\r\n.date-picker {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.date-picker label {\r\n  display: block;\r\n  margin-bottom: 8px;\r\n  font-weight: bold;\r\n  color: #2c3e50;\r\n}\r\n\r\n.date-picker input {\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 16px;\r\n  width: 200px;\r\n}\r\n\r\n.weekly-chart {\r\n  margin-bottom: 30px;\r\n  background: #fff;\r\n  border-radius: 10px;\r\n  box-shadow: 0 2px 8px #a084e820;\r\n  padding: 20px 10px 10px 10px;\r\n}\r\n\r\n#weeklyCaloriesChart {\r\n  max-width: 100%;\r\n  height: 300px;\r\n}\r\n\r\n.record-summary {\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\r\n  gap: 20px;\r\n  margin-top: 20px;\r\n}\r\n\r\n.summary-card {\r\n  background-color: #f8f9fa;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.summary-card h3 {\r\n  color: #2c3e50;\r\n  margin-bottom: 10px;\r\n  font-size: 1.1em;\r\n}\r\n\r\n.calories {\r\n  font-size: 24px;\r\n  font-weight: bold;\r\n  color: #42b983;\r\n  margin: 0;\r\n}\r\n\r\n.calories.warning {\r\n  color: #dc3545;\r\n}\r\n\r\n.loading {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n}\r\n\r\n.error {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #dc3545;\r\n  background-color: #f8d7da;\r\n  border-radius: 4px;\r\n}\r\n\r\n.no-data {\r\n  text-align: center;\r\n  padding: 20px;\r\n  color: #666;\r\n  background-color: #f8f9fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.login-required {\r\n  text-align: center;\r\n  padding: 20px;\r\n  background-color: #f8f9fa;\r\n  border-radius: 4px;\r\n}\r\n\r\n.login-link {\r\n  display: inline-block;\r\n  margin-top: 10px;\r\n  color: #42b983;\r\n  text-decoration: none;\r\n  font-weight: bold;\r\n}\r\n\r\n.login-link:hover {\r\n  text-decoration: underline;\r\n}\r\n</style> "],"mappings":";;EACO,SAAM;AAAmB;;;EACL,SAAM;;;EACtB,SAAM;AAAa;;;;EAYU,SAAM;;;;EAIpB,SAAM;;;;EAIH,SAAM;;;;EAID,SAAM;;;EAC3B,SAAM;AAAc;;EAEpB,SAAM;AAAU;;EAEhB,SAAM;AAAc;;EAEpB,SAAM;AAAU;;EAEhB,SAAM;AAAc;;;EAQf,SAAM;;;;EAIR,SAAM;;;;uBA/CpBA,mBAAA,CAmDM,OAnDNC,UAmDM,GAlDOC,IAAA,CAAAC,UAAU,I,cAArBH,mBAAA,CA6CM,OA7CNI,UA6CM,GA5CJC,mBAAA,CASM,OATNC,UASM,G,0BARJD,mBAAA,CAA+B;IAAxB,OAAI;EAAM,GAAC,OAAK,sB,gBACvBA,mBAAA,CAMC;IALCE,IAAI,EAAC,MAAM;IACXC,EAAE,EAAC,MAAM;;aACAC,KAAA,CAAAC,YAAY,GAAAC,MAAA;IAAA;IACpBC,GAAG,EAAEC,QAAA,CAAAC,KAAK;IACVC,QAAM,EAAAC,MAAA,QAAAA,MAAA;MAAA,OAAEH,QAAA,CAAAI,eAAA,IAAAJ,QAAA,CAAAI,eAAA,CAAAC,KAAA,CAAAL,QAAA,EAAAM,SAAA,CAAe;IAAA;uEAFfV,KAAA,CAAAC,YAAY,E,KAMzBU,mBAAA,eAAkB,EACPX,KAAA,CAAAY,cAAc,CAACC,MAAM,I,cAAhCtB,mBAAA,CAEM,OAFNuB,UAEM,EAAAP,MAAA,QAAAA,MAAA,OADJX,mBAAA,CAA0C;IAAlCG,EAAE,EAAC;EAAqB,2B,yCAGvBC,KAAA,CAAAe,OAAO,I,cAAlBxB,mBAAA,CAEM,OAFNyB,UAEM,EAF8B,UAEpC,KAEgBhB,KAAA,CAAAiB,KAAK,I,cAArB1B,mBAAA,CAEM,OAFN2B,UAEM,EAAAC,gBAAA,CADDnB,KAAA,CAAAiB,KAAK,oBAGMjB,KAAA,CAAAoB,UAAU,I,cAA1B7B,mBAAA,CAeM,OAfN8B,UAeM,GAdJzB,mBAAA,CAGM,OAHN0B,UAGM,G,0BAFJ1B,mBAAA,CAAc,YAAV,OAAK,sBACTA,mBAAA,CAA0D,KAA1D2B,WAA0D,EAAAJ,gBAAA,CAAnCnB,KAAA,CAAAoB,UAAU,CAACI,aAAa,IAAG,MAAI,gB,GAExD5B,mBAAA,CAGM,OAHN6B,WAGM,G,0BAFJ7B,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAAyD,KAAzD8B,WAAyD,EAAAP,gBAAA,CAAlCnB,KAAA,CAAAoB,UAAU,CAACO,YAAY,IAAG,MAAI,gB,GAEvD/B,mBAAA,CAKM,OALNgC,WAKM,G,0BAJJhC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAEI;IAFD,SAAKiC,eAAA,EAAC,UAAU;MAAA,WAAsB7B,KAAA,CAAAoB,UAAU,CAACU,iBAAiB;IAAA;sBAChE9B,KAAA,CAAAoB,UAAU,CAACU,iBAAiB,IAAG,OACpC,uB,sBAIJvC,mBAAA,CAEM,OAFNwC,WAEM,EAFsB,cAE5B,G,oBAEFxC,mBAAA,CAGM,OAHNyC,WAGM,G,0BAFJpC,mBAAA,CAAiB,WAAd,YAAU,sBACbqC,YAAA,CAA8DC,sBAAA;IAAjDC,EAAE,EAAC,QAAQ;IAAC,SAAM;;wBAAa;MAAA,OAAI5B,MAAA,QAAAA,MAAA,O,iBAAJ,MAAI,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}