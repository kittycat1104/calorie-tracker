{"ast":null,"code":"import { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    user: null,\n    token: localStorage.getItem('token') || null\n  },\n  getters: {\n    isAuthenticated: state => !!state.token,\n    currentUser: state => state.user\n  },\n  mutations: {\n    setToken(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n    },\n    setUser(state, user) {\n      state.user = user;\n    },\n    logout(state) {\n      state.token = null;\n      state.user = null;\n      localStorage.removeItem('token');\n    }\n  },\n  actions: {\n    async login({\n      commit\n    }, credentials) {\n      try {\n        const response = await fetch('http://localhost:8081/api/auth/login', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(credentials)\n        });\n        const data = await response.json();\n        commit('setToken', data.token);\n        return data;\n      } catch (error) {\n        console.error('登入失敗：', error);\n        throw error;\n      }\n    },\n    async register({\n      commit\n    }, userData) {\n      try {\n        const response = await fetch('http://localhost:8081/api/auth/register', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(userData)\n        });\n        const data = await response.json();\n        return data;\n      } catch (error) {\n        console.error('註冊失敗：', error);\n        throw error;\n      }\n    },\n    logout({\n      commit\n    }) {\n      commit('logout');\n    }\n  }\n});","map":{"version":3,"names":["createStore","state","user","token","localStorage","getItem","getters","isAuthenticated","currentUser","mutations","setToken","setItem","setUser","logout","removeItem","actions","login","commit","credentials","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","register","userData"],"sources":["C:/myapp/diet/diet-vue/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\r\n\r\nexport default createStore({\r\n  state: {\r\n    user: null,\r\n    token: localStorage.getItem('token') || null\r\n  },\r\n  getters: {\r\n    isAuthenticated: state => !!state.token,\r\n    currentUser: state => state.user\r\n  },\r\n  mutations: {\r\n    setToken(state, token) {\r\n      state.token = token\r\n      localStorage.setItem('token', token)\r\n    },\r\n    setUser(state, user) {\r\n      state.user = user\r\n    },\r\n    logout(state) {\r\n      state.token = null\r\n      state.user = null\r\n      localStorage.removeItem('token')\r\n    }\r\n  },\r\n  actions: {\r\n    async login({ commit }, credentials) {\r\n      try {\r\n        const response = await fetch('http://localhost:8081/api/auth/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(credentials)\r\n        })\r\n        const data = await response.json()\r\n        commit('setToken', data.token)\r\n        return data\r\n      } catch (error) {\r\n        console.error('登入失敗：', error)\r\n        throw error\r\n      }\r\n    },\r\n    async register({ commit }, userData) {\r\n      try {\r\n        const response = await fetch('http://localhost:8081/api/auth/register', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(userData)\r\n        })\r\n        const data = await response.json()\r\n        return data\r\n      } catch (error) {\r\n        console.error('註冊失敗：', error)\r\n        throw error\r\n      }\r\n    },\r\n    logout({ commit }) {\r\n      commit('logout')\r\n    }\r\n  }\r\n}) "],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,IAAI,EAAE,IAAI;IACVC,KAAK,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI;EAC1C,CAAC;EACDC,OAAO,EAAE;IACPC,eAAe,EAAEN,KAAK,IAAI,CAAC,CAACA,KAAK,CAACE,KAAK;IACvCK,WAAW,EAAEP,KAAK,IAAIA,KAAK,CAACC;EAC9B,CAAC;EACDO,SAAS,EAAE;IACTC,QAAQA,CAACT,KAAK,EAAEE,KAAK,EAAE;MACrBF,KAAK,CAACE,KAAK,GAAGA,KAAK;MACnBC,YAAY,CAACO,OAAO,CAAC,OAAO,EAAER,KAAK,CAAC;IACtC,CAAC;IACDS,OAAOA,CAACX,KAAK,EAAEC,IAAI,EAAE;MACnBD,KAAK,CAACC,IAAI,GAAGA,IAAI;IACnB,CAAC;IACDW,MAAMA,CAACZ,KAAK,EAAE;MACZA,KAAK,CAACE,KAAK,GAAG,IAAI;MAClBF,KAAK,CAACC,IAAI,GAAG,IAAI;MACjBE,YAAY,CAACU,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAC;MAAEC;IAAO,CAAC,EAAEC,WAAW,EAAE;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;UACnEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;QAClC,CAAC,CAAC;QACF,MAAMQ,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClCV,MAAM,CAAC,UAAU,EAAES,IAAI,CAACvB,KAAK,CAAC;QAC9B,OAAOuB,IAAI;MACb,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7B,MAAMA,KAAK;MACb;IACF,CAAC;IACD,MAAME,QAAQA,CAAC;MAAEb;IAAO,CAAC,EAAEc,QAAQ,EAAE;MACnC,IAAI;QACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;UACtEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACM,QAAQ;QAC/B,CAAC,CAAC;QACF,MAAML,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;QAClC,OAAOD,IAAI;MACb,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,OAAO,EAAEA,KAAK,CAAC;QAC7B,MAAMA,KAAK;MACb;IACF,CAAC;IACDf,MAAMA,CAAC;MAAEI;IAAO,CAAC,EAAE;MACjBA,MAAM,CAAC,QAAQ,CAAC;IAClB;EACF;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}